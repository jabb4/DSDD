services:
  django:
    container_name: django
    build:
      context: .
      dockerfile: ./django-build/Dockerfile
    restart: unless-stopped
    volumes:
      - static-data:/vol/web
    environment:
      - DB_HOST=database
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - database

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: ./celery-build/Dockerfile
    restart: unless-stopped
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - django
      - redis

  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped

  database:
    container_name: database
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  proxy:
    container_name: proxy
    build:
      context: ./proxy-build
    restart: unless-stopped
    depends_on:
      - django
    ports:
      - 8888:8000
    volumes:
      - static-data:/vol/static
    environment:
      - APP_HOST=django
      - APP_PORT=8000
      - LISTEN_PORT=8888

volumes:
  postgres-data:
  static-data:
